class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int n = nums.size();
        int ngei[n];
        
        ngei[n-1] = n;
        st.push(n-1);
        for(int i = n-2 ; i>=0 ; i--){
            while(st.size()>0 && nums[st.top()]<=nums[i])st.pop();
            if(st.size()>0) ngei[i] = st.top();
            else ngei[i] = n;
            st.push(i);
        }
        vector<int>ans;
        int j = 0;
        for(int i = 0 ; i< n-k+1 ; i++){
            if(j<i) j = i;
            int max = nums[j];
            while(j < i+k){
                max = nums[j];
                if(ngei[j] >=i+k) break;
                j = ngei[j];
            }
            ans.push_back(max);
        }
        return ans;
    }
};

