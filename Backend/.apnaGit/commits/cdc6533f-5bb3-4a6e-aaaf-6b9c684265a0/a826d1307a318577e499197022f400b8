

#include<iostream>
using namespace std;

class TrieNode{
public:

    char data;
    TrieNode* children[26]; // It denotes that every node can have 26 children
    bool isTerminal; // To check that our node is a terminal node or not

    TrieNode(char ch){
        this->data = ch;
        for(int i = 0 ; i<26 ; i++){
            children[i] = NULL;
        }
        isTerminal = false;
    }
};

class Trie{
public:

    TrieNode* root;

    Trie(){
        root = new TrieNode('\0');
    }

    void insertUtil(TrieNode* root , string word){

        TrieNode* child;
        int index = word[0] - 'A' ;
        // base case
        if(word.length()==0){
            root->isTerminal = true;
            return;
        }

        if(root->children[index] != NULL){ // if present
            child = root->children[index];
        }
        else{ // if absent
            child = new TrieNode(word[0]);
            root->children[index] = child;
        }

        insertUtil(child , word.substr(1));
    }

    void insertWord(string word){
        insertUtil(root , word);
    }
};

int main(){

    Trie* t = new Trie();
    t->insertWord("abcd");

    return 0;
}